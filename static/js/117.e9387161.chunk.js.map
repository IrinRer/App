{"version":3,"file":"static/js/117.e9387161.chunk.js","mappings":"4LACA,EAA0B,uBAA1B,EAAkE,8BAAlE,EAAwG,qBAAxG,EAA2I,2BAA3I,EAAiL,wBAAjL,EAAkN,sB,4BCsGlN,GAAeA,EAAAA,EAAAA,KANS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,UAIiB,CAAEE,SAAAA,EAAAA,IAA1C,EA/Fc,SAACC,GACb,IAAMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,YAAY,GAEdC,iBAAkBC,EAAAA,GAAW,CAC3BJ,MAAOI,EAAAA,KAAaJ,QAAQK,SAAS,YACrCJ,SAAUG,EAAAA,KAEPE,IAAI,EAAG,2CACPD,SAAS,cAEdE,SAAU,SAACC,EAAQC,GACjBb,EAAMD,SACJa,EAAOR,MACPQ,EAAOP,SACPO,EAAON,WACPO,EAAOC,WAETD,EAAOE,eAAc,GACrBC,YAAW,WACTH,EAAOE,eAAc,KACpB,KACHC,YAAW,WACTH,EAAOI,cACN,QAIP,OAAKjB,EAAMH,QAsDF,SAAC,KAAD,CAAUqB,GAAI,cApDrB,gBAAKC,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,sCACA,kBAAMT,SAAUV,EAAOoB,aAAvB,WACE,iBAAKF,UAAWC,EAAhB,WACE,kBACEE,KAAK,OACLC,KAAK,QACLC,YAAY,QACZC,MAAOxB,EAAOW,OAAOR,MACrBsB,SAAUzB,EAAO0B,aACjBC,OAAQ3B,EAAO4B,aAEhB5B,EAAO6B,OAAO1B,OAASH,EAAO8B,QAAQ3B,OACrC,gBAAKe,UAAWC,EAAhB,SAAsCnB,EAAO6B,OAAO1B,QAClD,MACJ,kBACEkB,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,MAAOxB,EAAOW,OAAOP,SACrBqB,SAAUzB,EAAO0B,aACjBC,OAAQ3B,EAAO4B,aAGhB5B,EAAO6B,OAAOzB,UAAYJ,EAAO8B,QAAQ1B,UACxC,gBAAKc,UAAWC,EAAhB,SACGnB,EAAO6B,OAAOzB,WAEf,KACHJ,EAAO+B,QACN,gBAAKb,UAAWC,EAAhB,SAAsCnB,EAAO+B,OAAOC,QAClD,MAEJ,iBAAKd,UAAWC,EAAhB,WACE,kBACEE,KAAM,WACNC,KAAK,aACLE,MAAOxB,EAAOW,OAAON,WACrBoB,SAAUzB,EAAO0B,eALrB,qBAUF,gBAAKR,UAAWC,EAAhB,UACE,mBAAQc,SAAUjC,EAAOkC,aAAzB","sources":["webpack://my-app/./src/components/login/Login.module.scss?4c39","components/login/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__qwVzy\",\"wrapper__items\":\"Login_wrapper__items__fuGjO\",\"login\":\"Login_login__i3ysd\",\"error__mess\":\"Login_error__mess__EeF8Y\",\"checkbox\":\"Login_checkbox__hhcbc\",\"button\":\"Login_button__uLjDS\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport classes from \"./Login.module.scss\";\r\nimport { setLogin } from \"../../redux/AutoReducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n    },\r\n    validationSchema: yup.object({\r\n      email: yup.string().email().required(\"Required\"),\r\n      password: yup\r\n        .string()\r\n        .min(4, \"Password must be at least 4 characters.\")\r\n        .required(\"Required\"),\r\n    }),\r\n    onSubmit: (values, action) => {\r\n      props.setLogin(\r\n        values.email,\r\n        values.password,\r\n        values.rememberMe,\r\n        action.setStatus\r\n      );\r\n      action.setSubmitting(true);\r\n      setTimeout(() => {\r\n        action.setSubmitting(false);\r\n      }, 500);\r\n      setTimeout(() => {\r\n        action.resetForm();\r\n      }, 5000);\r\n    },\r\n  });\r\n\r\n  if (!props.isAuth) {\r\n    return (\r\n    <div className={classes.wrapper}>\r\n      <div className={classes.wrapper__items}>\r\n        <h1>Login in</h1>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <div className={classes.login}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Login\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {formik.errors.email && formik.touched.email ? (\r\n              <div className={classes.error__mess}>{formik.errors.email}</div>\r\n            ) : null}\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n\r\n            {formik.errors.password && formik.touched.password ? (\r\n              <div className={classes.error__mess}>\r\n                {formik.errors.password}\r\n              </div>\r\n            ) : null}\r\n            {formik.status ? (\r\n              <div className={classes.error__mess}>{formik.status.error}</div>\r\n            ) : null}\r\n\r\n            <div className={classes.checkbox}>\r\n              <input\r\n                type={\"checkbox\"}\r\n                name=\"rememberMe\"\r\n                value={formik.values.rememberMe}\r\n                onChange={formik.handleChange}\r\n              />\r\n              remember me\r\n            </div>\r\n          </div>\r\n          <div className={classes.button}>\r\n            <button disabled={formik.isSubmitting}>Login</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    );\r\n  } else {\r\n    return <Navigate to={\"/Profile\"} />;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setLogin })(Login);\r\n"],"names":["connect","state","isAuth","auth","setLogin","props","formik","useFormik","initialValues","email","password","rememberMe","validationSchema","yup","required","min","onSubmit","values","action","setStatus","setSubmitting","setTimeout","resetForm","to","className","classes","handleSubmit","type","name","placeholder","value","onChange","handleChange","onBlur","handleBlur","errors","touched","status","error","disabled","isSubmitting"],"sourceRoot":""}